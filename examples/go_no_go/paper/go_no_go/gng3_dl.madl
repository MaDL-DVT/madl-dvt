const token_t;

const ok;

const nok;

const go;

const no_go;

enum ok_t{
     ok;
     nok;
};

enum go_t{
     go;
     no_go;
};

uses go_no_go_macro;
uses go_no_go_macro_dl;

macro gng3_dl() => chan out {

function f(x:go_t) : ok_t {
  if (x == go) ok; else nok;
};

chan gng_out_1 := go_no_go_macro(Queue(1, Source(ok_t)), Queue(1, Source(ok_t)));
chan gng_out_2 := go_no_go_macro(Queue(1, Source(ok_t)), Queue(1, Source(ok_t)));
chan gng_out_3 := go_no_go_macro_dl(gng_out_1,gng_out_2);

let out := Queue(1,gng_out_3);
};
